@model SecurityEF.SecurityUser

@{
    ViewBag.Title = "Edit";
}

<h2>Edit User</h2>
@using (Html.BeginForm("Edit", "User", new { pUserCode = Model.UserCode }, FormMethod.Post, new { id = "Form01" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>SecurityUser</legend>
        @Html.HiddenFor(model => model.ID)
        <div class="editor-label">
            @Html.LabelFor(model => model.UserCode, "User Code")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.UserCode, new { @readonly = "readonly", Style = "background:#cccccc;" })
            @*@Html.ValidationMessageFor(model => model.UserCode)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.LoginName, "Login Name")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.LoginName, new { @readonly = "readonly", Style = "background:#cccccc;" })
            @*@Html.ValidationMessageFor(model => model.LoginName)*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeCode, "Employee No.")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmployeeCode)
            @Html.ValidationMessageFor(model => model.EmployeeCode)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.EmployeeName, "Employee Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.EmployeeName)
            @Html.ValidationMessageFor(model => model.EmployeeName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Remarks)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Remarks)
            @Html.ValidationMessageFor(model => model.Remarks)
        </div>

        <div class="editor-label">
            @Html.Label("Is Active")
        </div>
        <div class="editor-field">
            @Html.CheckBoxFor(model => model.ActiveFlag2)
            @Html.ValidationMessageFor(model => model.ActiveFlag2)
        </div>
        <p>
            <input type="submit" value="Save" />
        </p>
        
    </fieldset>
}
<p>
    @Html.ActionLink("Back to User List", "Index")
</p>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    


    <script>
        // just for the demos, avoids form submit
        jQuery.validator.setDefaults({
            debug: true,
            success: "valid"
        });

        $("#Form01").validate({
            rules: {
                //----------Validation rule for LoginName--------
                LoginName: {
                    required: true,
                    minlength: 3,
                    maxlength: 15,
                    alphanumeric: true
                },

                //----------Validation rule for Password--------
                Password: {
                    required: true,
                    minlength: 6,
                    maxlength: 15,
                    alphanumeric: true
                },

                //----------Validation rule for EmployeeCode--------
                EmployeeCode: {
                    required: true,
                    maxlength: 10,
                    alphanumeric: true
                },

                //----------Validation rule for EmployeeName--------
                EmployeeName: {
                    required: true,
                    maxlength: 50
                },

                //----------Validation rule for Remarks--------
                Remarks: {
                    required: false,
                    maxlength: 100
                },
            },
            errorElement: 'span',
            submitHandler: function (form) {
                form.submit();
            }
        });
    </script>
}
